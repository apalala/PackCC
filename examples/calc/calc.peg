 %prefix "calc"

statement <- _ e:expression _ EOL { printf("answer=%d\n", e); }
            / ( !EOL . )* EOL      { printf("error\n"); }

expression <- e:term { $$ = e; }

term <- l:term _ '+' _ r:factor { $$ = l + r; }
        / l:term _ '-' _ r:factor { $$ = l - r; }
        / e:factor                { $$ = e; }

factor <- l:factor _ '*' _ r:unary { $$ = l * r; }
        / l:factor _ '/' _ r:unary { $$ = l / r; }
        / e:unary                  { $$ = e; }

unary <- '+' _ e:unary { $$ = +e; }
        / '-' _ e:unary { $$ = -e; }
        / e:primary     { $$ = e; }

primary <- < [0-9]+ >               { $$ = atoi($1); }
            / '(' _ e:expression _ ')' { $$ = e; }

_      <- [ \t]*
EOL    <- '\n' / '\r\n' / '\r' / ';'

%%
int main() {
    calc_context_t *ctx = calc_create(NULL);
    while (calc_parse(ctx, NULL));
    calc_destroy(ctx);
    return 0;
}
